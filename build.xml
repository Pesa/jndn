<!-- DEPRECATED. jNDN now uses Maven. Please see INSTALL.md . -->

<!-- based on http://ant.apache.org/manual/using.html -->
<project name="jNDN" default="dist" basedir=".">
  <echo message="!!!!!!!!!!! DEPRECATED !!!!!!!!!!!! jNDN now uses Maven. Please see INSTALL.md ."/>
    <description>
        jNDN build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="examples-src" location="examples/src"/>
  <property name="examples-build" location="examples/build"/>
  <property name="tests-src" location="tests/src"/>
  <property name="tests-build" location="tests/build"/>
  <property name="dist"  location="dist"/>
  <condition property="protobuf.available">
    <available classname="com.google.protobuf.Message"/>
  </condition>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${examples-build}"/>
    <mkdir dir="${tests-build}"/>
  </target>

  <path id="classpath.lib">
    <pathelement location="${build}" />
  </path>

  <path id="classpath.examples">
    <pathelement location="./contrib/sqlite-jdbc-3.8.7.jar"/>
    <pathelement location="${examples-build}" />
  </path>

  <path id="classpath.test">
    <pathelement location="./contrib/hamcrest-core-1.3.jar"/>
    <pathelement location="./contrib/junit-4.11.jar"/>
    <pathelement location="./contrib/sqlite-jdbc-3.8.7.jar"/>
    <pathelement location="${tests-build}" />
  </path>

  <target name="compile" depends="init" description="compile the library source" >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" includeantruntime="true">
      <exclude name="net/named_data/jndn/sync/**"                   unless="${protobuf.available}"/>
      <exclude name="net/named_data/jndn/encoding/ProtobufTlv.java" unless="${protobuf.available}"/>
      <!-- Assume that an Android project does not use Ant. -->
      <exclude name="net/named_data/jndn/security/identity/AndroidSqlite3IdentityStorage.java"/>
      <exclude name="net/named_data/jndn/encrypt/AndroidSqlite3*.java"/>
      <exclude name="net/named_data/jndn/security/pib/AndroidSqlite3*.java"/>
      <classpath refid="classpath.lib"/>
    </javac>
  </target>

  <target name="compile-examples" depends="compile" description="compile the examples source" >
    <!-- Compile the java code from ${examples-src} into ${examples-build} -->
    <javac srcdir="${examples-src}" destdir="${examples-build}" includeantruntime="true">
      <exclude name="net/named_data/jndn/tests/TestChronoChat.java"           unless="${protobuf.available}"/>
      <exclude name="net/named_data/jndn/tests/ChatbufProto.java"             unless="${protobuf.available}"/>
      <exclude name="net/named_data/jndn/tests/TestEncodeDecodeFibEntry.java" unless="${protobuf.available}"/>
      <exclude name="net/named_data/jndn/tests/FibEntryProto.java"            unless="${protobuf.available}"/>
      <classpath refid="classpath.lib" />
      <classpath refid="classpath.examples"/>
    </javac>
  </target>

  <target name="compile-tests" depends="compile" description="compile the unit tests source" >
    <!-- Compile the java code from ${tests-src} into ${tests-build} -->
    <javac srcdir="${tests-src}" destdir="${tests-build}" includeantruntime="true">
      <classpath refid="classpath.lib" />
      <classpath refid="classpath.test"/>
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/jndn.jar" basedir="${build}"/>
  </target>

  <target name="examples" depends="dist,compile-examples"
       description="generate the examples class files">
  </target>

  <target name="test" depends="compile-tests" description="run the JUnit unit tests">
    <junit fork="no" haltonfailure="no">
      <formatter type="plain" usefile="false" />
      <formatter type="xml" />
      <classpath refid="classpath.lib" />
      <classpath refid="classpath.test" />

      <batchtest>
        <!-- Exclude the inner classes which have "*$*" -->
        <fileset dir="${tests-build}" includes="**/unit_tests/Test*"
           excludes="**/unit_tests/*$*" />
      </batchtest>
    </junit>
  </target>

  <target name="integration-test" depends="compile-tests" description="run the JUnit integration tests">
    <junit fork="no" haltonfailure="no">
      <formatter type="plain" usefile="false" />
      <formatter type="xml" />
      <classpath refid="classpath.lib" />
      <classpath refid="classpath.test" />

      <batchtest>
        <!-- Exclude the inner classes which have "*$*" -->
        <fileset dir="${tests-build}" includes="**/integration_tests/Test*"
           excludes="**/integration_tests/*$*"/>
      </batchtest>
    </junit>
  </target>

  <target name="clean" description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${examples-build}"/>
    <delete dir="${tests-build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
